name: Build and Deploy API

run-name: "Deploy ${{ github.event.inputs.API_NAME }} on ${{ github.event.inputs.ENV }}"

on:
  workflow_call:
    inputs:
      API_NAME:
        type: string
        required: true
      API_SOURCE_PATH:
        type: string
        required: true
      DATA_GCP_PROJECT:
        type: string
        required: true
      API_SERVICE_NAME:
        type: string
        required: true
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT:
        required: true
      SLACK_BOT_TOKEN:
        required: true

env:
  DOCKER_REGISTRY_PROJECT_ID: passculture-infra-prod
  DOCKER_REGISTRY_REGION: europe-west1
  DOCKER_REGISTRY_REPOSITORY: pass-culture-artifact-registry
  GCP_PROJECT: passculture-data-ehp

jobs:
  build-and-push-docker-image:
    name: "Build image job"
    runs-on: [self-hosted, linux, x64]
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Output variables
        id: vars
        run: echo "DOCKER_REPO=${DOCKER_REGISTRY_REGION}-docker.pkg.dev/${DOCKER_REGISTRY_PROJECT_ID}/${DOCKER_REGISTRY_REPOSITORY}" >> $GITHUB_ENV

      - name: get short SHA
        id: sha
        run: echo ::set-output name=short_sha::${GITHUB_SHA}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          driver: docker
      - id: openid-auth
        name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          create_credentials_file: false
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - id: docker-login
        uses: docker/login-action@v2.1.0
        name: "Docker login"
        with:
          registry: "${{ env.DOCKER_REGISTRY_REGION }}-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.openid-auth.outputs.access_token }}"
      - name: "Build and push ${{ inputs.API_NAME }} docker image"
        uses: docker/build-push-action@v3.2.0
        with:
         context: ${{ inputs.API_SOURCE_PATH }}
         push: true
         tags: |
               ${{ env.DOCKER_REPO }}/api-data/${{ inputs.API_NAME }}:${{ steps.sha.outputs.short_sha }}
               ${{ env.DOCKER_REPO }}/api-data/${{ inputs.API_NAME }}:latest

  deploy-api:
    runs-on: [self-hosted, linux, x64]
    needs: build-and-push-docker-image
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: 'actions/checkout@v3'
    - name: Output variables
      id: vars
      run: echo "DOCKER_REPO=${DOCKER_REGISTRY_REGION}-docker.pkg.dev/${DOCKER_REGISTRY_PROJECT_ID}/${DOCKER_REGISTRY_REPOSITORY}" >> $GITHUB_ENV
    - name: get short SHA
      id: sha
      run: echo ::set-output name=short_sha::${GITHUB_SHA}
    - uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        service: ${{ inputs.API_SERVICE_NAME }}
        image: "${{ env.DOCKER_REPO }}/api-data/${{ inputs.API_NAME }}:${{ steps.sha.outputs.short_sha }}"
        project_id: ${{ inputs.DATA_GCP_PROJECT }}
        region: "europe-west1"