name: Main Workflow

on: [push]

jobs:

  linter:
    name: "linter job"
    runs-on: [self-hosted, linux, x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.7
      - name : Install Black 
        run: |
          python -m pip install --upgrade pip
          pip install -r  linter-requirements.txt      
      - name: Run Black
        run: black --check --verbose .


  # debug:
  #   name: "debug job"
  #   runs-on: [self-hosted, linux, x64]
  #   steps:
  #     - name: debug var
  #       env:
  #        GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  #        ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
  #       run: |
  #        echo $GCP_WORKLOAD_IDENTITY_PROVIDER >> /tmp/var.txt
  #        echo $ARTIFACT_REGISTRY_SERVICE_ACCOUNT >> /tmp/var.txt
  #     - name: Sleep 
  #       run: sleep 18000s
  #       shell: bash

 ########## Tests Integration #############       
  tests-integration-api-reco-dev:
    uses: ./.github/workflows/api_reco_test_integration.yml
    with:
      ENV: dev
      DATA_GCP_PROJECT: "passculture-data-ehp"
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
  tests-integration-api-reco-stg:
    #if: github.ref == 'refs/heads/staging'
    uses: ./.github/workflows/api_reco_test_integration.yml
    with:
      ENV: stg
      DATA_GCP_PROJECT: "passculture-data-ehp"
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
  # tests-integration-api-reco-prod:
  #   if: github.ref == 'refs/heads/production'
  #   uses: ./.github/workflows/api_reco_test_integration.yml
  #   with:
  #     ENV: prod
  #   secrets:
  #     GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
  #     GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

##########  API Reco Coverage Test   ############# 
  build-and-test-api-reco:
    name: "build and test API Reco"
    if: github.ref == 'refs/heads/master'
    runs-on: [self-hosted, linux, x64]
    defaults:
     run: 
       working-directory: "apps/recommendation/api"
    services:
      postgres:
        image: kartoza/postgis:12.4
        env:
          POSTGRES_PASS: postgres
          POSTGRES_USER: postgres
          POSTGRES_DBNAME: db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.7.0
        with:
         python-version: 3.7
      - name : Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r api-dev-requirements.txt
      - run: cat /etc/os-release
      - name : Install psql client 
        run: sudo apt update && sudo apt install -y postgresql-client
      - name : Run tests
        env:
         PG_HOST: "localhost"
        run:  |
          export PYTHONPATH=$PYTHONPATH:~/data-gcp/apps/recommendation/api
          ./run_tests.sh

  build-and-push-api-reco-docker-image-dev:
    if: github.ref == 'refs/heads/master'
    needs: tests-integration-api-reco-dev
    uses: ./.github/workflows/build-docker-image.yml
    with:
      API_NAME: recommendation
      API_SOURCE_PATH: "apps/recommendation/api"
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}