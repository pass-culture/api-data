name: "API Reco Test Integration"

run-name: "[${{ github.event.inputs.TARGET_ENV }}] API-Reco Test Integration"

on:
  workflow_call:
    inputs:
      TARGET_ENV:
        type: string
        required: true
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

env:
  DATA_GCP_PROJECT: ${{ vars.DATA_GCP_PROJECT }}
  API_LOCAL: 1
  API_BACKEND_REFRESH_TOKEN_NAME: ${{ vars.API_BACKEND_REFRESH_TOKEN_NAME }}

jobs:
  tests-integration-api-reco:
    name: "[ ${{ inputs.TARGET_ENV }} ] Tests Integration sur l'API RECO"
    runs-on: ubuntu-latest
    environment: ${{ inputs.TARGET_ENV }}
    permissions:
      contents: 'write'
      id-token: 'write'
    defaults:
     run:
       working-directory: "apps/recommendation/api/api_tests"
    steps:
      - uses: actions/checkout@v4
      - name: "Connect to Secret Manager"
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get secrets for Slack"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
            ARTIFACT_REGISTRY_SERVICE_ACCOUNT:passculture-metier-ehp/passculture-main-artifact-registry-service-account
            ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER:passculture-metier-ehp/infra-prod-gcp-workload-identity-provider
      - id: openid-auth
        name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - uses: actions/setup-python@v4.7.0
        with:
         python-version: "3.10"
      - name: "Get secrets data for Slack"
        id: 'secrets-data'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            API_REFRESH_TOKEN:${{ env.DATA_GCP_PROJECT }}/${{ env.API_BACKEND_REFRESH_TOKEN_NAME }}
      - uses: yezz123/setup-uv@v4
      - name : "Install requirements"
        run: uv pip install --system -r requirements.txt

      - name : "Run tests"
        run: |
          export ENV_SHORT_NAME='${{ inputs.TARGET_ENV }}'
          export REFRESH_TOKEN='${{ steps.secrets-data.outputs.API_REFRESH_TOKEN }}'
          pytest --cov
      - name: "Post to a Slack channel"
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: "C01GVAXM02W" # alerts_data
          payload: |
            {
              "attachments": [
                  {
                    "mrkdwn_in": ["text"],
                    "color": "#A30002",
                    "author_name": "${{github.actor}}",
                    "author_link": "https://github.com/${{github.actor}}",
                    "author_icon": "https://github.com/${{github.actor}}.png",
                    "title": "API Reco Integration Test on ${{ inputs.TARGET_ENV }}",
                    "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                    "text": "Test Integration on ${{ inputs.TARGET_ENV }} is failed :boom:"
                  }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
