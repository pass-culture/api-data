[project]
name = "llm-framework-v2"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.116.1",
    "fastapi-cloud-logging>=1.1.0",
    "fastapi-versioning>=0.10.0",
    "google-api-python-client>=2.176.0",
    "google-cloud-logging>=3.12.1",
    "google-cloud-secret-manager>=2.24.0",
    "google-cloud-storage>=2.19.0",
    "gunicorn>=23.0.0",
    "huggingface-hub>=0.32.3",
    "ipykernel>=6.29.5",
    "langchain==0.3.23",
    "langchain-anthropic>=0.3.14",
    "langchain-community>=0.3.21",
    "langchain-google-vertexai>=2.0.24",
    "langchain-huggingface>=0.2.0",
    "langchain-mistralai>=0.2.10",
    "langchain-openai>=0.3.18",
    "langgraph>=0.4.7",
    "loguru>=0.7.3",
    "matplotlib>=3.10.3",
    "mlflow>=3.1.3",
    "openai>=1.82.1",
    "pandas>=2.2.3",
    "pyarrow>=19.0.1",
    "ruff>=0.11.12",
    "scikit-learn>=1.6.1",
    "seaborn>=0.13.2",
    "streamlit>=1.45.1",
    "torch>=2.7.0",
    "transformers>=4.52.4",
]

## ruff
# Recommended ruff config for now, to be updated as we go along.
[tool.ruff]
target-version = 'py312'

lint.select = [
    "E",      # pycodestyle
    "W",      # pycodestyle
    "F",      # Pyflakes
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "I",      # isort
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "PT",     # flake8-pytest-style
    "RUF",    # Ruff-specific rules
    "FBT001", # flake8-boolean-trap
]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
